import pygame
import sys


level_map = [
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
'X                                      X',
'X                                      X',
'X                                      X',
'X                                      X',
'X                                      X',
'X  P                                T  X',
'X          XXXXXXXXXXXXXXXXX           X',
'X                                      X',
'X                                      X',
'X                                      X',
'X                                      X',
'X                                      X',
'XXXXXXXXXXXXXXXX       XXXXXXXXXXXXXXXXX',
'X                                      X',
'X                                      X',
'X                                      X',
'X                                      X',
'X                                      X',
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',]
    
tile_size = 32
#print(screen_height)
#print(len(level_map))

# Constants
SCREEN_WIDTH = 1280
SCREEN_HEIGHT = len(level_map)*tile_size
PLAYER_WIDTH = 50
PLAYER_HEIGHT = 50
PLAYER_SPEED = 0.8


# Create the screen
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Two-Player Game")

# Player class
class Player(pygame.sprite.Sprite):
    def __init__(self, x, y):
        super().__init__()
        self.image = pygame.Surface((PLAYER_WIDTH, PLAYER_HEIGHT))
        self.image.fill('white')
        self.rect = self.image.get_rect()
        self.rect.center = (x, y)
        self.speed_x = 0
        self.speed_y = 0

    def update(self):
        self.rect.x += self.speed_x
        self.rect.y += self.speed_y

# Create players
player1 = Player(SCREEN_WIDTH // 4, SCREEN_HEIGHT // 2)
player2 = Player(3 * SCREEN_WIDTH // 4, SCREEN_HEIGHT // 2)

class Tile(pygame.sprite.Sprite):
    def __init__(self,pos,size):
        super().__init__()
        self.image = pygame.Surface((size,size))
        self.image.fill('white')
        self.rect = self.image.get_rect(topleft = pos)

class Level:
    def __init__(self,level_data,surface):
        self.display_surface = surface
        self.setup_level(level_data)
        pass
        
    def setup_level(self,layout):
        self.tiles = pygame.sprite.Group()
        self.player = pygame.sprite.GroupSingle()
        self.player2 = pygame.sprite.GroupSingle()
        
        for row_index,row in enumerate(layout):
            for col_index,cell in enumerate(row):
                x = col_index * tile_size
                y = row_index * tile_size
                if cell == 'X':
                    tile = Tile((x,y),tile_size)
                    self.tiles.add(tile)
                if cell == 'P':
                    player_sprite = Player((x,y))
                    self.player.add(player_sprite)
                if cell == "T":
                    player2_sprite = Player((x,y))
                    self.player.add(player2_sprite)
                    
    def horizontal_movement_collision(self):
        player = self.player.sprite
        player.rect.x += player.direction.x*player.speed
        
        for sprite in self.tiles.sprites():
            if sprite.rect.colliderect(player.rect):
                if player.direction.x < 0:
                    player.rect.left = sprite.rect.right
                elif player.direction.x > 0:
                    player.rect.right = sprite.rect.left
    
    def vertical_movement_collision(self):
        player = self.player.sprite
        player.apply_gravity()
        for sprite in self.tiles.sprites():
            if sprite.rect.colliderect(player.rect):
                if player.direction.y > 0:
                    player.rect.bottom = sprite.rect.top
                    player.direction.y = 0
                elif player.direction.y < 0:
                    player.rect.top = sprite.rect.bottom
                    player.direction.y = 0
                    
                    
                    
                    
    def run(self):
        #level tiles
        self.tiles.draw(self.display_surface)
        #player
        self.player.update()
        self.player2.update()
        self.horizontal_movement_collision()
        self.vertical_movement_collision()
        self.player.draw(self.display_surface)
        self.horizontal_movement_collision2()
        self.vertical_movement_collision2()
        self.player2.draw(self.display_surface)


# Create a sprite group for both players
players_group = pygame.sprite.Group()
players_group.add(player1, player2)

# Main game loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Player 1 controls
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        player1.speed_x = -PLAYER_SPEED
    elif keys[pygame.K_RIGHT]:
        player1.speed_x = PLAYER_SPEED
    else:
        player1.speed_x = 0

    if keys[pygame.K_UP]:
        player1.speed_y = -PLAYER_SPEED
    elif keys[pygame.K_DOWN]:
        player1.speed_y = PLAYER_SPEED
    else:
        player1.speed_y = 0

    # Player 2 controls
    if keys[pygame.K_a]:
        player2.speed_x = -PLAYER_SPEED
    elif keys[pygame.K_d]:
        player2.speed_x = PLAYER_SPEED
    else:
        player2.speed_x = 0

    if keys[pygame.K_w]:
        player2.speed_y = -PLAYER_SPEED
    elif keys[pygame.K_s]:
        player2.speed_y = PLAYER_SPEED
    else:
        player2.speed_y = 0

#python setup
pygame.init()
screen = pygame.display.set_mode((SCREEN_WIDTH,SCREEN_HEIGHT))
clock = pygame.time.Clock()
screen.fill("white")
level = Level(level_map,screen)
players_group.update()


while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    level.run()
    players_group.draw(screen)
    screen.fill((0, 0, 0))
    
    pygame.display.update()
    clock.tick(60)